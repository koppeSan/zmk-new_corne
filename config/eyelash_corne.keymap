#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "unicode.h"
#include "keycode_japanese.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        gmail_address: gmail_address {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none &kp K &kp N2 &kp DOT &kp D &kp R &kp U &kp M &kp S &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M &kp TAB>,
                <&macro_tap>;

            label = "GMAIL_ADDRESS";
        };
    };

    combos {
        compatible = "zmk,combos";

        SHIFTBS {
            bindings = <&kp DELETE>;
            key-positions = <28 12>;
        };

        CtrlAltDEL {
            bindings = <&kp LA(LC(DEL))>;
            key-positions = <42 43 44>;
        };

        taskManager {
            bindings = <&kp LS(LC(ESCAPE))>;
            key-positions = <13 28>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R             &kp T                               &kp UP                &kp Y        &kp U  &kp I      &kp O    &kp P      &kp BSPC
&mo 1           &kp A  &kp S  &kp D     &kp F             &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J  &kp K      &kp L    &kp MINUS  &kp SEMICOLON
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C     &kp V             &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                              &kp LGUI  &kp LEFT_CONTROL  &lt 3 SPACE                                               &lt 4 ENTER  &mo 2  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp SPACE LS(SPACE)>;
        };

        lower_layer {
            display-name = "SETTINGS";
            bindings = <
&trans      &kp N1           &kp N2          &kp N3      &kp N4  &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&trans      &bt BT_NXT       &bt BT_SEL 0    &bt BT_PRV  &none   &none                          &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&bt BT_CLR  &rgb_ug RGB_TOG  &rgb_ug RGB_ON  &trans      &trans  &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                             &trans      &trans  &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                                           &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp ASTERISK  &kp BSPC
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4                            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS     &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &kp C_BRIGHTNESS_AUTO                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LESS_THAN         &kp GREATER_THAN       &kp QUESTION  &kp RIGHT_SHIFT
                                    &trans     &trans     &kp SPACE                                                                            &trans     &kp LEFT   &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_3 {
            display-name = "Fn&Web";
            bindings = <
&studio_unlock  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5                                            &mmv MOVE_Y(-250)                    &kp F6     &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &kp F6   &kp F7   &kp F8  &kp F9  &kp F10                        &mmv MOVE_X(-250)  &mkp LCLK          &mmv MOVE_X(250)  &mkp LCLK  &mkp RCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &kp F11  &kp F12  &trans  &trans  &kp PRINTSCREEN  &kp LA(F4)                       &mmv MOVE_Y(250)                     &mkp MCLK  &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                  &trans  &trans  &trans                                                                                 &trans     &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            display-name = "NumPad";
            bindings = <
&kp GRAVE       &kp JP_DLLR  &kp JP_SQT   &kp JP_SEMI   &kp JP_LBKT  &kp JP_RBKT                         &kp PG_UP             &kp TAB       &kp N7     &kp N8  &kp N9  &kp JP_ASTRK  &kp BACKSPACE
&trans          &kp JP_YEN   &kp JP_DQT   &kp JP_COLON  &kp JP_LPAR  &kp JP_RPAR               &kp HOME  &bl BL_TOG     &kp END  &kp JP_PLUS   &kp N4     &kp N5  &kp N6  &kp JP_MINUS  &kp JP_EQUAL
&kp LEFT_SHIFT  &kp JP_AT    &kp JP_BSLH  &kp JP_AND    &kp JP_LBRC  &kp JP_RBRC     &trans              &kp PG_DN           &kp NUMBER_0  &kp N1     &kp N2  &kp N3  &kp JP_SLASH  &kp JP_CARET
                                          &trans        &trans       &kp LEFT_SHIFT                                              &td0          &kp ENTER  &trans
            >;
        };
    };
};
